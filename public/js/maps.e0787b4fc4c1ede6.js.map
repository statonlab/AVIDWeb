{"version":3,"file":"js/maps.e0787b4fc4c1ede6.js","mappings":"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","sources":["webpack:///./resources/js/helpers/Maps.js","webpack:///./resources/js/components/SitesMap.vue?933a","webpack:///./resources/js/screens/Maps.vue?729c","webpack:///resources/js/components/SitesMap.vue","webpack:///./resources/js/components/SitesMap.vue?db87","webpack:///./resources/js/components/SitesMap.vue?2258","webpack:///./resources/js/components/SitesMap.vue","webpack:///./resources/js/components/SitesMap.vue?2373","webpack:///./resources/js/screens/Maps.vue?761c","webpack:///resources/js/screens/Maps.vue","webpack:///./resources/js/screens/Maps.vue"],"sourcesContent":["export default class Maps {\n    loadMap(onLoad) {\n        if (window.google && window.google.maps) {\n            onLoad()\n            return\n        }\n\n        const script  = document.createElement('script')\n        const key     = window.avid.keys.maps\n        script.async  = true\n        script.defer  = true\n        script.type   = 'text/javascript'\n        script.onload = onLoad\n        script.src    = `https://maps.googleapis.com/maps/api/js?key=${key}`\n        document.head.appendChild(script)\n    }\n\n    static load(onLoad) {\n        return new Maps().loadMap(onLoad)\n    }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sites-map[data-v-d4917e98]{height:calc(95vh - 145px)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/components/SitesMap.vue\"],\"names\":[],\"mappings\":\"AAiPA,4BACA,yBACA\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"card border shadow-sm\\\">\\n    <div class=\\\"card-header shadow-none bg-light rounded\\\">\\n      <strong>All Sites</strong>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div ref=\\\"map\\\" class=\\\"sites-map\\\"></div>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport Maps from '../helpers/Maps'\\n\\nexport default {\\n  name: 'SitesMap',\\n\\n  mounted() {\\n    this.loadMap()\\n  },\\n\\n  data() {\\n    return {\\n      plots          : [],\\n      map            : null,\\n      markers        : [],\\n      infoWindow     : null,\\n      selectedFeature: null,\\n    }\\n  },\\n\\n  methods: {\\n    loadMap() {\\n      Maps.load(async () => {\\n        await this.loadPlots()\\n        this.createMap()\\n        this.setMapMarkers()\\n        await this.loadLayers()\\n      })\\n    },\\n\\n    async loadPlots() {\\n      try {\\n        const {data} = await axios.get(`/web/sites-map`)\\n        this.plots   = data\\n      } catch (e) {\\n        console.error(e)\\n      }\\n    },\\n\\n    async loadLayers() {\\n      try {\\n        const {data} = await axios.get('/web/sites-map/layers')\\n        this.map.data.addGeoJson(data)\\n        this.map.data.setMap(this.map)\\n        this.map.data.addListener('click', (event) => {\\n          this.showWmu(event)\\n        })\\n        this.map.data.setStyle(f => {\\n          return {\\n            strokeWeight: 1,\\n            fillColor   : '#000000',\\n          }\\n        })\\n      } catch (e) {\\n        console.error(e)\\n      }\\n    },\\n\\n    setMapMarkers() {\\n      this.markers.forEach(marker => {\\n        marker.setMap(null)\\n      })\\n      this.markers = []\\n      this.plots.forEach(plot => {\\n        const marker = new google.maps.Marker({\\n          map     : this.map,\\n          position: this.getCoords(plot),\\n        })\\n\\n        marker.addListener('click', () => {\\n          this.openWindow(marker, plot)\\n        })\\n\\n        this.markers.push(marker)\\n      })\\n    },\\n\\n    createMap() {\\n      let position = {\\n        lat: -35,\\n        lng: 85,\\n      }\\n\\n      if (this.plots.length) {\\n        const plot = this.plots[0]\\n        position   = this.getCoords(plot)\\n      }\\n\\n      this.map = new google.maps.Map(this.$refs.map, {\\n        zoom  : 6,\\n        center: position,\\n      })\\n\\n      this.map.addListener('click', () => {\\n        this.map.data.setStyle(() => {\\n          return {\\n            color       : '#000000',\\n            strokeWeight: 1,\\n          }\\n        })\\n\\n        if (this.infoWindow) {\\n          this.infoWindow.close()\\n        }\\n      })\\n    },\\n\\n    getCoords(plot) {\\n      return {lat: plot[1], lng: plot[2]}\\n    },\\n\\n    async showWmu(event) {\\n      const feature   = event.feature\\n      const aggregate = feature.getProperty('Aggregate')\\n\\n      if (this.selectedFeature && this.selectedFeature.getProperty('Aggregate') === aggregate) {\\n        this.selectedFeature = null\\n        this.map.data.setStyle(() => {\\n          return {\\n            color       : '#000000',\\n            strokeWeight: 1,\\n          }\\n        })\\n        if (this.infoWindow) {\\n          this.infoWindow.close()\\n        }\\n\\n        return\\n      }\\n\\n      let content = `\\n      <table class=\\\"table mb-0\\\">\\n        <tr>\\n          <th>WMU</th>\\n          <td>${aggregate}</td>\\n        </tr>\\n      </table>\\n      `\\n      if (!this.infoWindow) {\\n        this.infoWindow = new google.maps.InfoWindow({\\n          content,\\n        })\\n      } else {\\n        this.infoWindow.close()\\n        this.infoWindow.setContent(content)\\n      }\\n\\n      this.map.data.setStyle(f => {\\n        let color = '#000000'\\n\\n        if (f.getProperty('Aggregate') === aggregate) {\\n          color = '#ff0000'\\n        }\\n\\n        return {\\n          strokeWeight: 1,\\n          fillColor   : color,\\n        }\\n      })\\n\\n      this.infoWindow.open({\\n        anchor  : null,\\n        position: event.latLng,\\n        map     : this.map,\\n      })\\n      this.infoWindow.setPosition(event.latLng)\\n      this.selectedFeature = feature\\n    },\\n\\n    async openWindow(marker, plot) {\\n      if (this.loading) {\\n        return\\n      }\\n\\n      this.loading = true\\n      try {\\n        const id = plot[0]\\n        if (this.infoWindow) {\\n          this.infoWindow.close()\\n        }\\n\\n        const loadingState = `\\n        <span class=\\\"spinner-grow spinner-grow-sm text-primary\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n        <span>Loading...</span>\\n        `\\n        if (!this.infoWindow) {\\n          this.infoWindow = new google.maps.InfoWindow({\\n            content: loadingState,\\n          })\\n        } else {\\n          this.infoWindow.setContent(loadingState)\\n        }\\n\\n        this.infoWindow.open({\\n          anchor: marker,\\n          map   : this.map,\\n        })\\n\\n        const {data} = await axios.get(`/web/sites-map/site/${id}`)\\n\\n        this.infoWindow.setContent(`\\n        <div>\\n          <table class=\\\"table mb-0 table-sm\\\">\\n          <tr>\\n              <th>Site Name</th>\\n              <td>${data.name}</td>\\n            </tr>\\n            <tr>\\n              <th>Created By</th>\\n              <td>${data.user.name}</td>\\n            </tr>\\n            <tr>\\n              <td colspan=\\\"2\\\">\\n                <a href=\\\"${data.url}\\\">Visit site page</a>\\n              </td>\\n            </tr>\\n          </table>\\n        </div>\\n        `)\\n      } catch (e) {\\n        console.error(e)\\n      }\\n\\n      this.loading = false\\n    },\\n  },\\n}\\n</script>\\n\\n<style scoped lang=\\\"css\\\">\\n.sites-map {\\n  height: calc(95vh - 145px);\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('sites-map')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"card border shadow-sm\">\n    <div class=\"card-header shadow-none bg-light rounded\">\n      <strong>All Sites</strong>\n    </div>\n    <div class=\"card-body\">\n      <div ref=\"map\" class=\"sites-map\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Maps from '../helpers/Maps'\n\nexport default {\n  name: 'SitesMap',\n\n  mounted() {\n    this.loadMap()\n  },\n\n  data() {\n    return {\n      plots          : [],\n      map            : null,\n      markers        : [],\n      infoWindow     : null,\n      selectedFeature: null,\n    }\n  },\n\n  methods: {\n    loadMap() {\n      Maps.load(async () => {\n        await this.loadPlots()\n        this.createMap()\n        this.setMapMarkers()\n        await this.loadLayers()\n      })\n    },\n\n    async loadPlots() {\n      try {\n        const {data} = await axios.get(`/web/sites-map`)\n        this.plots   = data\n      } catch (e) {\n        console.error(e)\n      }\n    },\n\n    async loadLayers() {\n      try {\n        const {data} = await axios.get('/web/sites-map/layers')\n        this.map.data.addGeoJson(data)\n        this.map.data.setMap(this.map)\n        this.map.data.addListener('click', (event) => {\n          this.showWmu(event)\n        })\n        this.map.data.setStyle(f => {\n          return {\n            strokeWeight: 1,\n            fillColor   : '#000000',\n          }\n        })\n      } catch (e) {\n        console.error(e)\n      }\n    },\n\n    setMapMarkers() {\n      this.markers.forEach(marker => {\n        marker.setMap(null)\n      })\n      this.markers = []\n      this.plots.forEach(plot => {\n        const marker = new google.maps.Marker({\n          map     : this.map,\n          position: this.getCoords(plot),\n        })\n\n        marker.addListener('click', () => {\n          this.openWindow(marker, plot)\n        })\n\n        this.markers.push(marker)\n      })\n    },\n\n    createMap() {\n      let position = {\n        lat: -35,\n        lng: 85,\n      }\n\n      if (this.plots.length) {\n        const plot = this.plots[0]\n        position   = this.getCoords(plot)\n      }\n\n      this.map = new google.maps.Map(this.$refs.map, {\n        zoom  : 6,\n        center: position,\n      })\n\n      this.map.addListener('click', () => {\n        this.map.data.setStyle(() => {\n          return {\n            color       : '#000000',\n            strokeWeight: 1,\n          }\n        })\n\n        if (this.infoWindow) {\n          this.infoWindow.close()\n        }\n      })\n    },\n\n    getCoords(plot) {\n      return {lat: plot[1], lng: plot[2]}\n    },\n\n    async showWmu(event) {\n      const feature   = event.feature\n      const aggregate = feature.getProperty('Aggregate')\n\n      if (this.selectedFeature && this.selectedFeature.getProperty('Aggregate') === aggregate) {\n        this.selectedFeature = null\n        this.map.data.setStyle(() => {\n          return {\n            color       : '#000000',\n            strokeWeight: 1,\n          }\n        })\n        if (this.infoWindow) {\n          this.infoWindow.close()\n        }\n\n        return\n      }\n\n      let content = `\n      <table class=\"table mb-0\">\n        <tr>\n          <th>WMU</th>\n          <td>${aggregate}</td>\n        </tr>\n      </table>\n      `\n      if (!this.infoWindow) {\n        this.infoWindow = new google.maps.InfoWindow({\n          content,\n        })\n      } else {\n        this.infoWindow.close()\n        this.infoWindow.setContent(content)\n      }\n\n      this.map.data.setStyle(f => {\n        let color = '#000000'\n\n        if (f.getProperty('Aggregate') === aggregate) {\n          color = '#ff0000'\n        }\n\n        return {\n          strokeWeight: 1,\n          fillColor   : color,\n        }\n      })\n\n      this.infoWindow.open({\n        anchor  : null,\n        position: event.latLng,\n        map     : this.map,\n      })\n      this.infoWindow.setPosition(event.latLng)\n      this.selectedFeature = feature\n    },\n\n    async openWindow(marker, plot) {\n      if (this.loading) {\n        return\n      }\n\n      this.loading = true\n      try {\n        const id = plot[0]\n        if (this.infoWindow) {\n          this.infoWindow.close()\n        }\n\n        const loadingState = `\n        <span class=\"spinner-grow spinner-grow-sm text-primary\" role=\"status\" aria-hidden=\"true\"></span>\n        <span>Loading...</span>\n        `\n        if (!this.infoWindow) {\n          this.infoWindow = new google.maps.InfoWindow({\n            content: loadingState,\n          })\n        } else {\n          this.infoWindow.setContent(loadingState)\n        }\n\n        this.infoWindow.open({\n          anchor: marker,\n          map   : this.map,\n        })\n\n        const {data} = await axios.get(`/web/sites-map/site/${id}`)\n\n        this.infoWindow.setContent(`\n        <div>\n          <table class=\"table mb-0 table-sm\">\n          <tr>\n              <th>Site Name</th>\n              <td>${data.name}</td>\n            </tr>\n            <tr>\n              <th>Created By</th>\n              <td>${data.user.name}</td>\n            </tr>\n            <tr>\n              <td colspan=\"2\">\n                <a href=\"${data.url}\">Visit site page</a>\n              </td>\n            </tr>\n          </table>\n        </div>\n        `)\n      } catch (e) {\n        console.error(e)\n      }\n\n      this.loading = false\n    },\n  },\n}\n</script>\n\n<style scoped lang=\"css\">\n.sites-map {\n  height: calc(95vh - 145px);\n}\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SitesMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SitesMap.vue?vue&type=script&lang=js&\"","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SitesMap.vue?vue&type=style&index=0&id=d4917e98&scoped=true&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./SitesMap.vue?vue&type=template&id=d4917e98&scoped=true&\"\nimport script from \"./SitesMap.vue?vue&type=script&lang=js&\"\nexport * from \"./SitesMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SitesMap.vue?vue&type=style&index=0&id=d4917e98&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d4917e98\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card border shadow-sm\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"card-body\"},[_c('div',{ref:\"map\",staticClass:\"sites-map\"})])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-header shadow-none bg-light rounded\"},[_c('strong',[_vm._v(\"All Sites\")])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Maps.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Maps.vue?vue&type=script&lang=js&\"","<template>\n  <div>\n    <!-- Filters to be added later -->\n    <!--    <div class=\"col-md-3 col-sm-4\">-->\n    <!--      <div class=\"card mb-3 border shadow-sm\">-->\n    <!--        <div class=\"card-header shadow-none bg-light rounded\">-->\n    <!--          <strong class=\"text-medium\">Options</strong>-->\n    <!--        </div>-->\n    <!--        <div class=\"card-body p-2\">-->\n    <!--          <div class=\"nav nav-pills flex-column\"-->\n    <!--               id=\"v-pills-tab\"-->\n    <!--               role=\"tablist\"-->\n    <!--               aria-orientation=\"vertical\">-->\n    <!--            <a href=\"#\"-->\n    <!--               :class=\"['nav-link', 'pr-0', {'active': tab === 'one'}]\"-->\n    <!--               @click.prevent=\"selectTab('one')\">-->\n    <!--              <span>{{ 'Test Option 1' }}</span>-->\n    <!--              <icon v-if=\"tab === 'one'\" name=\"arrow-forward\" class=\"ml-auto forward-icon\"/>-->\n    <!--            </a>-->\n    <!--            <a href=\"#\"-->\n    <!--               :class=\"['nav-link', 'pr-0', {'active': tab === 'two'}]\"-->\n    <!--               @click.prevent=\"selectTab('two')\">-->\n    <!--              <span>{{ 'Test Option 2' }}</span>-->\n    <!--              <icon v-if=\"tab === 'two'\" name=\"arrow-forward\" class=\"ml-auto forward-icon\"/>-->\n    <!--            </a>-->\n    <!--          </div>-->\n    <!--        </div>-->\n    <!--      </div>-->\n    <!--    </div>-->\n    <sites-map/>\n  </div>\n</template>\n\n<script>\nimport InlineSpinner from '../components/InlineSpinner'\nimport Icon from '../components/Icon'\nimport SitesMap from \"../components/SitesMap\";\n\nexport default {\n  name: 'Maps',\n\n  components: {\n    InlineSpinner,\n    Icon,\n    SitesMap\n  },\n\n  mounted() {\n    this.selectTabFromHash()\n  },\n\n  data() {\n    return {\n      _request: null,\n      tab: 'one',\n      tabs: [\n        'one',\n        'two',\n      ],\n    }\n  },\n\n  methods: {\n    makeHash(tab) {\n      return tab.replace(/ /g, '-')\n    },\n    selectTabFromHash() {\n      if (this.$route.hash && this.$route.hash.length > 0) {\n        this.selectTab(this.$route.hash.replace(/-/g, ' ').substring(1))\n      }\n    },\n    selectTab(tab) {\n      if (this.tabs.indexOf(tab) === -1) {\n        return\n      }\n      this.tab = tab\n      this.$router.push({\n        hash: this.makeHash(tab),\n      }).catch(e => {\n      })\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n</style>\n","import { render, staticRenderFns } from \"./Maps.vue?vue&type=template&id=98f3d6ba&scoped=true&\"\nimport script from \"./Maps.vue?vue&type=script&lang=js&\"\nexport * from \"./Maps.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"98f3d6ba\",\n  null\n  \n)\n\nexport default component.exports"],"names":["Maps","onLoad","loadMap","window","google","maps","script","document","createElement","key","avid","keys","async","defer","type","onload","src","head","appendChild","___CSS_LOADER_EXPORT___","push","module","id","name","mounted","this","data","plots","map","markers","infoWindow","selectedFeature","methods","axios","console","strokeWeight","fillColor","setMapMarkers","forEach","marker","setMap","position","addListener","createMap","lat","lng","length","Map","$refs","zoom","center","color","getCoords","plot","event","feature","aggregate","content","anchor","loadingState","options","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","ref","components","InlineSpinner","Icon","SitesMap","selectTabFromHash","_request","tab","tabs","makeHash","replace","$route","hash","selectTab","substring","indexOf","$router"],"sourceRoot":""}